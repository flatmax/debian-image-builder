## host-information
#

# Retreive information about the host system
instance_information="$(wget -qO - \
    http://169.254.169.254/latest/dynamic/instance-identity/document)"

# We need the region, for the apt sources and the availability zone
# for the EBS volume
instance_id=$(printf -- "${instance_information}" | grep instanceId \
    | awk -F\" '{print $4}')
if [ -z "${instance_id}" ]
then
    die \
        "Unable to fetch the instance id of this machine." \
        "This script must be running on ec2 in order to mount EBS volumes."
fi

region=$(printf -- "${instance_information}" | grep region \
    | awk -F\" '{print $4}')
if [ -z "${region}" ]
then
    die "Unable to fetch the region of this machine."
fi

availability_zone=$(printf -- "${instance_information}" \
    | grep availabilityZone | awk -F\" '{print $4}')
if [ -z "${availability_zone}" ]
then
    die "Unable to fetch the availability zone of this machine."
fi

# Set the ec2_url to the same region as this machine, as anything else
# wouldn't make sense.
export EC2_URL="https://ec2.${region}.amazonaws.com"

# Check if we can handle this region, since there are hardcoded AKIs
# later on.
if ! $(contains ${region} known_regions[@])
then
    die "The region ${region} is unkown."
fi

if [ "${volume_type}" = 'instance' ]
then
    if [ -z "${target_region}" -a -n "${EC2_REGION}" ]
    then
        target_region="${EC2_REGION}"
    fi

    if ! $(contains ${target_region} known_regions[@])
    then
        die "The region ${target_region} is unkown."
    fi

    case "${target_region}" in
        us-east-1)
        export S3_URL='https://s3.amazonaws.com/'
        ;;
        *)
        export S3_URL="https://s3-${target_region}.amazonaws.com/"
        ;;
    esac
fi
