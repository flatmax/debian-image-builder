#!/bin/bash
#
# Make sure the minimum required version of euca2ools is installed.

# The package in Squeeze is v1.2, which does not support EBS-backed
# AMIs. The package in Wheezy is v2.0.2, which does not support HVM
# AMIs. The package in Jessie is v3.1.0, which does not support VPC
# AMIs.
euca2ools_sha1sum='f091b97d23dfb4c382899e32d4be71d531b36d21'
euca2ools_version='3.2.0'


function install_euca2ools {

    # We want to fail if make fails, so don't start a subshell with
    # (). Remember the old directory.

    local orig_pwd="$(pwd)"

    # Install build dependencies. Hopefully this covers everything.
    apt-get -y build-dep euca2ools

    wget -qO "${temp_dir}/euca2ools-${euca2ools_version}.tar.gz" \
        https://github.com/eucalyptus/euca2ools/archive/v${euca2ools_version}.tar.gz

    if ! sha1sum "${temp_dir}/euca2ools-${euca2ools_version}.tar.gz" | \
        grep -i "${euca2ools_sha1sum}"
    then
        die "euca2ools-${euca2ools_version}.tar.gz download failed."
    fi
    tar zxf "${temp_dir}/euca2ools-${euca2ools_version}.tar.gz" \
        -C "${temp_dir}"

    cd "${temp_dir}/euca2ools-${euca2ools_version}"
    python setup.py install || die "Bootstrapping failed!"
    cd "${orig_pwd}"
}


temp_dir="$(mktemp -d /tmp/${prog_name}.XXXXXXXX)"

# Install euca2ools from source if they are not already present or are
# the wrong version.
if ! command -v euca-version > /dev/null 2>&1
then
    install_euca2ools
elif [ "$(echo -e "$(euca-version 2>&1 \
    | cut -d ' ' -f 2)\n${euca2ools_version}" | sort -V | head -n 1)" \
    != "${euca2ools_version}" ]
then
    # The version installed is older than ${suca2ools_version}.
    install_euca2ools
fi

rm -r "${temp_dir}"
unset temp_dir
