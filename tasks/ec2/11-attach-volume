## attach-volume
#
# Attach the EBS volume, and partition if necessary.

declare -i attempt=12

# Get a random device letter, we will hang forever if we try to attach
# a volume to an already mapped device.
for device_letter in {f..z}
do
    block_device_path="/dev/xvd${device_letter}"
    [ ! -b "${block_device_path}" ] && break
done

if [ -b "${block_device_path}" ]
then
    die "No free device letters found (tried xvdf to xvdz)!"
fi

# The attach command fails in modern euca2ools versions when ran
# immediately after euca-create-volume - most probably because the
# command now executes too quickly for AWS's API to keep up!

while [ ${attempt} -ne 0 -a \
    $(euca-describe-volumes --filter status=available \
    "${volume_id}" 2>/dev/null | grep VOLUME | wc -l) -lt 1 ]
do
    sleep 5
    (( --attempt ))
done

if [ ${attempt} -eq 0 ]
then
    die "It seems we were unable to create ${volume_id}."
fi

euca-attach-volume --instance "${instance_id}" \
    --device "/dev/xvd${device_letter}" "${volume_id}"

# Wait until the volume is attached
dotdot "test -b ${block_device_path} && echo attached"

# Partition the block device.
if [ "${partitioning}" != "none" ]
then
    parted -s "${block_device_path}" mktable "${partitioning}"
    parted -s -a optimal "${block_device_path}" mkpart primary ext4 1Mi 100%
    parted -s "${block_device_path}" set 1 boot on
    hdparm -z "${block_device_path}"
    fs_device_path="${block_device_path}1"
else
    fs_device_path="${block_device_path}"
fi
