## register-ami
#
# Register the new AMI

declare kernel=""

if [ "${volume_type}" = 'instance' ]
then
    case ${region} in
        us-east-1)
            [ ${arch} = 'amd64' ] && aki="aki-919dcaf8"
            [ ${arch} = 'i386' ] && aki="aki-8f9dcae6"
            ;;
        us-west-1)
            [ ${arch} = 'amd64' ] && aki="aki-880531cd"
            [ ${arch} = 'i386' ] && aki="aki-8e0531cb"
            ;;
        us-west-2)
            [ ${arch} = 'amd64' ] && aki="aki-fc8f11cc"
            [ ${arch} = 'i386' ] && aki="aki-f08f11c0"
            ;;
        eu-west-1)
            [ ${arch} = 'amd64' ] && aki="aki-52a34525"
            [ ${arch} = 'i386' ] && aki="aki-68a3451f"
            ;;
        ap-southeast-1)
            [ ${arch} = 'amd64' ] && aki="aki-503e7402"
            [ ${arch} = 'i386' ] && aki="aki-ae3973fc"
            ;;
        ap-southeast-2)
            [ ${arch} = 'amd64' ] && aki="aki-c362fff9"
            [ ${arch} = 'i386' ] && aki="aki-cd62fff7"
            ;;
        ap-northeast-1)
            [ ${arch} = 'amd64' ] && aki="aki-176bf516"
            [ ${arch} = 'i386' ] && aki="aki-136bf512"
            ;;
        sa-east-1)
            [ ${arch} = 'amd64' ] && aki="aki-5553f448"
            [ ${arch} = 'i386' ] && aki="aki-5b53f446"
            ;;
        *) die "Unrecognized region:" "${region}"
    esac
else
    # Figure out which pvGrub kernel ID we need
    case $region in
        us-east-1)
            [ $arch = 'amd64' ] && aki="aki-88aa75e1"
            [ $arch = 'i386' ] && aki="aki-b6aa75df"
            ;;
        us-west-1)
            [ $arch = 'amd64' ] && aki="aki-f77e26b2"
            [ $arch = 'i386' ] && aki="aki-f57e26b0"
            ;;
        us-west-2)
            [ $arch = 'amd64' ] && aki="aki-fc37bacc"
            [ $arch = 'i386' ] && aki="aki-fa37baca"
            ;;
        eu-west-1)
            [ $arch = 'amd64' ] && aki="aki-71665e05"
            [ $arch = 'i386' ] && aki="aki-75665e01"
            ;;
        ap-southeast-1)
            [ $arch = 'amd64' ] && aki="aki-fe1354ac"
            [ $arch = 'i386' ] && aki="aki-f81354aa"
            ;;
        ap-southeast-2)
            [ $arch = 'amd64' ] && aki="aki-31990e0b"
            [ $arch = 'i386' ] && aki="aki-33990e09"
            ;;
        ap-northeast-1)
            [ $arch = 'amd64' ] && aki="aki-44992845"
            [ $arch = 'i386' ] && aki="aki-42992843"
            ;;
        sa-east-1)
            [ $arch = 'amd64' ] && aki="aki-c48f51d9"
            [ $arch = 'i386' ] && aki="aki-ca8f51d7"
            ;;
        us-gov-west-1)
            [ $arch = 'amd64' ] && aki="aki-79a4c05a"
            [ $arch = 'i386' ] && aki="aki-7ba4c058"
            ;;
        *) die "Unrecognized region:" "$region"
    esac
fi

[ $arch = 'i386' ] && ami_arch='i386'
[ $arch = 'amd64' ] && ami_arch='x86_64'

if [ "${virt}" = 'paravirtual' ]
then
    kernel="--kernel ${aki}"
fi

if [ "${volume_type}" = 'instance' ]
then
    log "Registering an AMI"

    ami_id=$(euca-register \
        --name "${ami_name}" --description "${description}" \
        --architecture "${ami_arch}" ${kernel} \
        --virtualization-type "${virt}" \
        "${S3_BUCKET}/${ami_name}.manifest.xml" \
        | awk '{print $2}')

    # If the user has already created an unnamed AMI today,
    # this will fail, so give the AMI registration command to the user
    if [[ ! "${ami_id}" =~ ^ami-[0-9a-z]{8}$ ]]
    then
        die \
            "Unable to register an AMI." \
            "You can do it manually with:" \
            "$(which euca-register) \\\\" \
            "--name '${ami_name}' --description '${description}' \\\\" \
            "--architecture '${ami_arch}' --kernel '${aki}' \\\\" \
            "--virtualization-type '${virt}' \\\\" \
            "'${S3_BUCKET}/${ami_name}.manifest.xml'"
    fi
else
    log "Registering an AMI with the snapshot '${snapshot_id}'"

    ami_id=$(euca-register \
        --name "${ami_name}" --description "${description}" \
        --architecture "${ami_arch}" ${kernel} \
        --virtualization-type "${virt}" \
        --snapshot "${snapshot_id}" \
        --root-device-name /dev/xvda \
        | awk '{print $2}')

    # If the user has already created an unnamed AMI today,
    # this will fail, so give the AMI registration command to the user
    if [[ ! "$ami_id" =~ ^ami-[0-9a-z]{8}$ ]]
    then
        die \
            "Unable to register an AMI." \
            "You can do it manually with:" \
            "$(which euca-register) \\\\" \
            "--name '${ami_name}' --description '${description}' \\\\" \
            "--architecture '${ami_arch}' ${kernel} \\\\" \
            "--virtualization-type '${virt}' \\\\" \
            "--snapshot '${snapshot_id}' \\\\" \
            "--root-device-name /dev/xvda"
    fi
fi

log "Your AMI has been created with the ID '${ami_id}'"
