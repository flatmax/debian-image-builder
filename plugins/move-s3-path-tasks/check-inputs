declare -i test_fail
declare test_file

if [ "${volume_type}" != "instance" ]
then
    echo -n "The move-s3-path plug-in is only compatible with instance "
    echo "volume types."
    exit 1
fi

if [ -z "${CUSTOM_S3_PATH}" ]
then
    echo "Please set \$CUSTOM_S3_PATH before running this plug-in."
    exit 1
fi

if ! command -v s3cmd >/dev/null 2>&1
then
    echo "Please install and configure s3cmd to access \$S3_BUCKET."
    exit 1
fi

if [ ! -f "${HOME}/.s3cfg" ]
then
    echo "Please run s3cmd --configure to create ~/.s3cfg first."
    exit 1
fi

# s3cmd does not return a non-zero exit status when returning an error
# from S3.
if s3cmd ls s3://${S3_BUCKET}/* 2>&1 | grep -q ERROR
then
    echo "s3cmd failed to read the contents of s3://${S3_BUCKET}/."
    exit 1
fi

# Check the target bucket at least exists as well.
if s3cmd ls s3://${CUSTOM_S3_PATH%%/*}/ 2>&1 | grep -q ERROR
then
    echo "s3cmd failed to read the contents of s3://${CUSTOM_S3_PATH%%/*}/."
    exit 1
fi

# Check that we have upload privileges to the target bucket.
test_file="$(mktemp /tmp/${prog_name}.XXXXXXXX)"
test_fail=0
echo "Test" > "${test_file}"

{
    s3cmd put "${test_file}" "s3://${S3_BUCKET}/$(basename ${test_file})"
    s3cmd -p mv "s3://${S3_BUCKET}/$(basename ${test_file})" \
        s3://${CUSTOM_S3_PATH}/
    s3cmd setacl --acl-grant=read:za-team@amazon.com \
        "s3://${CUSTOM_S3_PATH}/$(basename ${test_file})"
    s3cmd del "s3://${CUSTOM_S3_PATH}/$(basename ${test_file})"
} 2>&1 | grep -q ERROR && \
{
    echo "s3cmd failed to perform a required operation."
    echo "Please check your permissions to access the specified buckets."
    test_fail=1
}

rm -f "${test_file}"

if [ ${test_fail} -eq 1 ]
then
    {
        s3cmd del "s3://${S3_BUCKET}/$(basename ${test_file})"
        s3cmd del "s3://${CUSTOM_S3_PATH}/$(basename ${test_file})"
    } >/dev/null 2>&1
    exit 1
fi

unset test_file
unset test_fail
