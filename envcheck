#!/bin/bash

declare -i exit_status=0
declare -i move_s3_path=3

declare -r s3cfg="${HOME}/.s3cfg"

for var in AWS_ACCESS_KEY AWS_SECRET_KEY EC2_CERT EC2_PRIVATE_KEY \
    EC2_URL EC2_USER_ID EUCALYPTUS_CERT EC2_REGION S3_BUCKET \
    CUSTOM_S3_PATH
do
    # Check variable is not empty.
    if [ -z "${!var}" ]
    then
        echo "  unset ${var}"
        # Some missing variables are acceptable.
        if ! [[ "${var}" =~ S3_BUCKET|CUSTOM_S3_PATH|EC2_URL ]]
        then
            exit_status=1
        fi
    # Check certificate path points to a file, if applicable.
    elif [[ "${var}" =~ EC2_CERT|EC2_PRIVATE_KEY|EUCALYPTUS_CERT ]]
    then
        if [ ! -f "${!var}" ]
        then
            echo "missing ${var}=${!var}"
            exit_status=1
        else
            echo "   good ${var}=${!var}"
        fi
    # Checks against the variable passed.
    else
        echo "   good ${var}=${!var}"
        # Cross off a required variable for the optional move_s3_path
        # plugin.
        if [[ "${var}" =~ S3_BUCKET|CUSTOM_S3_PATH|EC2_URL ]]
        then
            move_s3_path=$(( --move_s3_path ))
        fi
    fi
done

# AWS_CREDENTIAL_FILE should not be set unless it points to a valid file (which
# only contains AWSAccessKeyId and AWSSecretKey values that would normally be
# read from the above environment variables anyway, making the file redundant.
if [ -z "${AWS_CREDENTIAL_FILE}" ]
then
    echo "   good AWS_CREDENTIAL_FILE is unset"
elif [ ! -f "${AWS_CREDENTIAL_FILE}"  ]
then
    echo "  error AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE} (unset this)"
else
    echo "     ok AWS_CREDENTIAL_FILE=${AWS_CREDENTIAL_FILE}"
fi

if ! command -v s3cmd 1>/dev/null
then
    echo "s3cmd is not installed."
    move_s3_path=1
elif [ -f "${s3cfg}" ]
then
    if [ -n "${AWS_ACCESS_KEY}" ]
    then
        if ! grep -iq "^access_key\s*=\s*${AWS_ACCESS_KEY}\s*$" "${s3cfg}"
        then
            echo "AWS_ACCESS_KEY not found in ${s3cfg}"
            move_s3_path=0
        fi
    fi
    if [ -n "${AWS_SECRET_KEY}" ]
    then
        if ! grep -iq "^secret_key\s*=\s*${AWS_SECRET_KEY}\s*$" "${s3cfg}"
        then
            echo "AWS_SECRET_KEY not found in ${s3cfg}"
            move_s3_path=0
        fi
    fi
else
    echo "s3cmd is not configured."
    move_s3_path=0
fi

echo
if [ "${exit_status}" -ne 0 ]
then
    echo "Environment not ready."
elif [ "${move_s3_path}" -ne 0 ]
then
    echo "Essentials are in place. move-s3-path is unavailable."
else
    echo "All systems green."
fi
exit ${exit_status}
